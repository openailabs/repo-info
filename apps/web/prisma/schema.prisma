//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider="postgresql"
    url=env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

enum ProjectTier {
    FREE
    PRO
}

enum SubscriptionPlan {
    FREE
    STANDARD
    PRO
}

model Project {
    id String @id() @db.VarChar(30)
    createdAt DateTime @default(now())
    organizationId String? @db.VarChar(36)
    userId String? @db.VarChar(36)
    name String
    tier ProjectTier @default(FREE)
    url String?
    @@index([organizationId])
    @@index([userId])
}

model Customer {
    id String @id() @db.VarChar(30)
    stripeId String @unique()
    subscriptionId String?
    clerkUserId String
    clerkOrganizationId String?
    name String?
    plan SubscriptionPlan?
    paidUntil DateTime?
    endsAt DateTime?
    @@index([clerkUserId])
}

model ApiKey {
    id String @id() @db.VarChar(30)
    createdAt DateTime @default(now())
    expiresAt DateTime?
    lastUsed DateTime?
    revokedAt DateTime?
    projectId String @db.VarChar(30)
    clerkUserId String @db.VarChar(36)
    name String @default("Secret Key")
    key String @unique()
    @@index([projectId])
}

model Ingestion {
    id String @id() @db.VarChar(30)
    createdAt DateTime @default(now())
    projectId String @db.VarChar(30)
    apiKeyId String @db.VarChar(30)
    schema Json
    hash String @db.VarChar(40)
    parent String? @db.VarChar(40)
    origin String @db.VarChar(100)
    @@index([projectId])
}

model Mark {
    id String @id() @default(cuid())
    createdAt DateTime? @map(name: "created_at") @default(now())
    createdBy String? @map(name: "created_by")
    updatedAt DateTime? @map(name: "updated_at") @updatedAt()
    updatedBy String? @map(name: "updated_by")
    owner String
    name String
    userId String? @map(name: "user_id")
    tags Json?
    note String?
    @@unique([owner, name, userId])
    @@index([owner, name, userId])
}